Konterner - wydzielona logicznie czesc systemu operacyjnego, ktora pozwala na pelna izolacje wszystkich procesow w niej zawartych

Najwazaniejsze cechy konterenrow:
- jednorazowosc (ang. disposability)
- przechodniosc (ang. ephemerality)
- przenosniosc (ang. portability) 
- lekkosc (ang. lightness)
- niezmiennosc (ang. immutability)
- bezstanowosc (ang. statelessness)

Obraz Dockera - lekki, automatyczny, zdatny do uruchomienia pakiet oprogramowania, ktory posiada w sobie wszystko, co potrzebne do utrzymania znajdujacej sie 
w nim aplikacji, tj.:
- kod aplikacji
- runtime (srodowisko uruchomieniowe)
- narzedzia systemowe
- biblioteki systemowe
- ustawienia aplikacji (np. pliki konfiguracyjne, zmienne srodowiskowe)


docker run - utworz/uruchom komende w nowym kontenerze
docker start - uruchom zatrzymany kontener
docker stop - zatrzymaj kontener
docker ps /ps -a - pokaz uruchomione kontenery/ pokaz wszystkie kontenery
docker exec - uruchom komende w dzialajacym kontenerze
docker rm - usun kontener

docker logs - pokaz logi kontenera
docker inspect - szczegoly danego zasobu Dockera
docker info - informacje o wszystkich zasobach Dockera i ustawienia globalne

docker imges - pokaz obrazy Dockera w systemie
docker rmi - usun obraz
docker pull - pobierz obraz (bez uruchomienia)
docker push - wysylanie obrazu do repozytorium


Montowanie zasobow do kontenera

Domyslnie wszystkie dane utworzone w kontenerze sa zapisywane w jego obrebie:
- wszystkie dane po usunieciu kontenera zostana utracone
- przenoszenie danych z kontenera na hosta nie jest latwe

Jest mozliwosc przenoszenia z kontenera do hosta dzieki:
- wolumenom (ang. volumes)
- bind mounts-om

Wolumeny: -v, --volume
- folder w formie hosta, ktory powinien byc zarzadzany tylko i wylacznie przez Dockera. 
- zaden inny proces nie powinien moc modyfikowac tego folderu
- domyslnie, w Linux, Docker przechowuje wolumeny w: /var/lib/docker/volumes/

Komendy wolumenow:

docker volume create - utworz wolumen
docker volume ls - lista wolumenow
docker volume rm - usun wolumen

Najwazniejsze zalety wolumenu:
- umozliwia montowanie wolumenu do wielu kontenerow jednoczesnie
- latwy backup ( cp /var/lib/docker/volumes/<nazwa_woluemnu> )
- umozliwia trzymanie wolumenow poza infrastruktura serwera
- mozna montowac na Linux i Windows


Bind-mounts: --mount
- folder w systemie hosta, ktory jest udostepniany kontenerom Dockera
- podobne do wolumenow, roznice: 
    - nie ma stalej sciezki, ale moze byc przechowywany  w dowolnym miejscu na hoscie oraz moze byc modtfikowany przez inne procesy
    - folder musi istniec przed jego podlaczeniem (mountem) do kontenera
    

docker run -d --name jenkins -p 8880:8080 -p 50000:50000 -v /home/panda/jenkins:/var/jenkins_home jenkins/jenkins
docker exec -it jenkins /bin/bash - wejscie do kontenera w terminalu

Opcja -v, --volume 

- host:kontener:opcje
sciezka do pliku : sciezka do kontenera : zaawanasowane ustawienia

- bind-mount
docker run -d --name asia -v host:kontener ubuntu:latest

- wolumen
docker run -d --name asia -v <nazwa_wolumenu>:/kontener ubuntu:latest


Opcja --mount

- 'type=<type>, source=<source>, dst=<destination>...'
typ mounta:bind,volume,tmpfs, sciazka do hosta=sciezka do kontenera, zaawansowane ustawienia

- bind-mount
docker run -d --name asia --mount type=bind,source=host,dst=/kontener ubuntu:latest

- wolumen
docker run -d --name asia --mount source=<nazwa_wolumenu>,dst=kontener ubuntu:latest


Sesja interaktywna z kontenerem:
- umozliwia przekazanie wszystkich strumeni STDIN, STDOUT, STDERROR do konsoli uruchomieniowej, w ktorej wykonano komende 
- docker run -it <obraz> /bin/bash
- docker exec -it <kontener> /bin/bash




