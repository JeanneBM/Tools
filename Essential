Jenkins:
http://192.168.44.44:8880/
docker run -d --name jenkins -p 8880:8080 -p 50000:50000 -v /home/panda/jenkins:/var/jenkins_home jenkins/jenkins

Selenium Hub:
http://192.168.44.44:4444/grid/console 
- docker run -p -d 4444:4444 --name selenium-hub --network=docker_network  selenium/hub

- docker run -d --name selenium-node --network=docker_network -e HUB_HOST=selenium-hub  selenium/node-firefox

JFrog Artifactory:
http://192.168.44.44:8082
docker container run -p 8081:8081 -p 8082:8082 --rm -v ~/Artifactory:/var/opt/jfrog/artifactory -d --name myjfrog docker.bintray.io/jfrog/artifactory-pro 

-----------------------------------------------------------------------------------------------------------------------------------------------------------

FROM openjdk:11.0
ARG JAR_FILE=target/*.jar
COPY ${JAR_FILE} app.jar
ENTRYPOINT ["java","-jar","/app.jar"]

FROM ubuntu:18.04
WORKDIR /home
RUN apt-get update -y && apt-get install curl openjdk-11-jdk git maven -y
RUN adduser --disabled-password --gecos "" jenkins
RUN curl -fsSL https://get.docker.com/ | sh

version: '3'
services:
jenkins:
image: jenkins/jenkins
container_name: jenkins
ports:
- "8880:8080"
- "50000:50000"
volumes:
- /home/panda/jenkins:/var/jenkins_home

docker-compose.yml:

version: '3’

services:
jenkins:
image: jenkins/jenkins:${TAG}

version: "3"
services:
jenkins:
build: .
ubuntu:
image: ubuntu:18.04
depends_on:
- ”jenkins”

docker-compose -f docker-compose.prod.yml up


-----------------------------------------------------------------------------------------------------------------------------------------------------------
docker-compose.yml:

version: '3'

services:
        jenkins:
                image: jenkins/jenkins
                container_name: jenkins
                ports:
                - "8880:8080"
                - "50000:50000"
                volumes:
                - /home/panda/jenkins:/var/jenkins_home
                networks:
                - docker_network
        ubuntu:
                container_name: ubuntu2
                build: /home/panda/docker/ubuntu
                volumes: /var/run/docker.sock:/var/run/docker.sock
                command: java -jar agent.jar -jnlpUrl http://192.168.44.44:8880/computer/Slave/slave-agent.jnlp -secret f9ddd91e86873955bd952e315a15997f74f3b0076b21c5a3d653a9ecc8a755ea -workDir "/home/"
                depends_on:
                - jenkins
                networks:
                - docker_network

networks:
        docker_network:
                driver:bridge


Dockerfile:

FROM ubuntu:18.04
WORKDIR /home
COPY agent.jar
RUN apt-get update -y && apt-get install curl openjdk-11-jdk git maven -y
RUN adduser --disabled-password --gecos "" jenkins
RUN curl -fsSL https://get.docker.com/ | sh
CMD tail -f /dev/null

-----------------------------------------------------------------------------------------------------------------------------------------------------------
Env

version: '3'

services:
        jenkins:
                image: jenkins/jenkins:jdk11
                container_name: jenkins
                ports:
                - "8880:8080"
                - "50000:50000"
                volumes:
                - ../volumes/jenkins:/var/jenkins_home
                networks:
                - docker_network
        ubuntu:
                container_name: ubuntu2
                build:
                        context: ../dockerfiles/slave
                volumes:
                        - /var/run/docker.sock:/var/run/docker.sock
                command: java -jar agent.jar -jnlpUrl http://192.168.44.44:8880/computer/Slave/slave-agent.jnlp -secret f9ddd91e86873955bd952e315a15997f74f3b0076b21c5a3d653a9ecc8a755ea -workDir "/home/"
                depends_on:
                        - jenkins
                networks:
                        - docker_network

        artifactory:
                image: docker.bintray.io/jfrog/artifactory-oss:latest
                container_name: artifactory
                volumes:
                        - ../volumes/artifactory:/var/opt/jfrog/artifactory
                ports:
                        - "8081:8081"
                        - "8082:8082"
                networks: 
                        - docker_network
        
        selenium_hub:
                image: selenium/hub
                container_name: seleniumhub
                ports:
                        - "4444:4444"
                networks: 
                        - docker_network

        selenium_firefox:
                image: selenium/node-firefox
                container_name: firefox
                depends_on: 
                        - selenium_hub
                environment: 
                        - HUB_HOST=seleniumhub
                        - HUB_PORT=4444

networks:
        docker_network:
                driver: bridge

========================================================================================================

Dockerfile:

FROM ubuntu:18.04
WORKDIR /home
COPY agent.jar .
RUN apt-get update -y && apt-get install curl openjdk-11-jdk git maven -y
RUN adduser --disabled-password --gecos "" jenkins
RUN curl -fsSL https://get.docker.com/ | sh
RUN usermod -aG docker jenkins
CMD tail -f /dev/null

========================================================================================================
start.sh

#!/bin/bash

useradd -u 1030 artifactory
chown -R artifactory:artifactory ./volumes/artifactory
useradd -u 1000 jenkins 
chown -R jenkins:jenkins ./volumes/jenkins
# chmod +x ./volumes/jenkins/copy_reference_file.log
cd compose
docker-compose up -d --build

========================================================================================================

package pl.pandait.panda;

import java.net.URL;
import java.net.MalformedURLException;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.openqa.selenium.By;
import org.openqa.selenium.Platform;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.boot.web.server.LocalServerPort;

import static org.junit.Assert.assertEquals;

@SpringBootTest(classes = {PandaApplication.class}, webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT)
public class PandaApplicationSeleniumTest {

    private static WebDriver driver;

    @LocalServerPort
    private int port;

    @BeforeEach
    public void startup() throws InterruptedException, MalformedURLException
    {
        DesiredCapabilities capabilities = DesiredCapabilities.firefox();
        capabilities.setPlatform(Platform.LINUX);
        driver = new RemoteWebDriver(new URL( "http://192.168.44.44:4444/wd/hub"), capabilities);

        //Pamietaj, ze aplikacja Spring musi dzialac! Tzn. musi byc wlaczona.
        driver.get(String.format("http://ubuntu:%d/", port));
    

        //Czekamy 2 sekundy
        Thread.sleep(2000);
    }

    @Test
    public void checkIfApplicationRunCorrectly(){
        System.out.println("Uruchamiam test 1: Sprawdzenie napisu na stronie głównej");
        WebElement greetingString = driver.findElement(By.xpath("//p"));
        String napis = greetingString.getText().trim();
        assertEquals("Get your greeting here", napis);

        WebElement linkToGreetings = greetingString.findElement(By.xpath("./a"));
        linkToGreetings.click();

        WebElement helloWorldString = driver.findElement(By.xpath("//p"));
        String newPageString = helloWorldString.getText().trim();
        assertEquals("Hello, World!", newPageString);
    }

    @AfterAll
    public static void after(){
        driver.quit();
    }
}
